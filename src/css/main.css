@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
  //   при появлении / исчезновении скроллбара
  //  */
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../fonts/KumbhSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #FFFFFF;
  --color-dark: #141414;
  --color-dark-10: #1A1A1A;
  --color-dark-15: #262626;
  --color-dark-20: #333333;
  --color-dark-40: #666666;
  --color-gray-50: #7E7E81;
  --color-gray-60: #98989A;
  --color-accent: #FFD11A;
  --color-red: #FF5500;
  --gradient: linear-gradient(
      45deg,
      var(--color-dark-15) 64%,
      var(--color-accent) 136%
  );
  --border: 0.0625rem solid var(--color-dark-15);
  --shadow: 0 0 0 0.25rem #191919;
  --font-family-base: "Inter", sans-serif;
  --font-family-accent: "Kumbh Sans", sans-serif;
  --container-width: 100rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --100vw: calc(100vw - var(--scrollbar-width));
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 80rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

.full-vw-line {
  position: relative;
}
.full-vw-line::before, .full-vw-line::after {
  position: absolute;
  width: calc((var(--100vw) - var(--container-width)) / 2);
  height: 0.0625rem;
  background-color: var(--color-dark-15);
}
.full-vw-line--top::before {
  content: "";
  bottom: 100%;
}
.full-vw-line--bottom::after {
  content: "";
  top: 100%;
}
.full-vw-line--left::before, .full-vw-line--left::after {
  right: 100%;
}
.full-vw-line--right::before, .full-vw-line--right::after {
  left: 100%;
}

.circle-icon {
  --circleSize: 3.25rem;
  --circleMarginLeft: 1.25rem;
  position: relative;
  min-height: var(--circleSize);
  padding-right: calc(var(--circleSize) + var(--circleMarginLeft));
}
@media (width <= 90.06125rem) {
  .circle-icon {
    --circleSize: 2.75rem;
    --circleMarginLeft: 0.875rem;
  }
}
@media (width <= 47.99875rem) {
  .circle-icon {
    --circleSize: 2.5rem;
  }
}
.circle-icon::after {
  width: var(--circleSize);
  height: var(--circleSize);
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  content: "";
  right: 0;
  background: url("../../icons/arrow-top-right_black.svg") center no-repeat var(--color-accent);
  border-radius: 50%;
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  font-family: var(--font-family-base);
  letter-spacing: -0.03em;
  color: var(--color-gray-50);
  background-color: var(--color-dark);
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-light);
}

h1, .h1,
h2, .h2,
h3, .h3 {
  font-family: var(--font-family-accent);
  font-weight: 500;
}

h4, .h4,
h5, .h5,
h6, .h6 {
  font-weight: 600;
}

h1, .h1 {
  font-size: clamp(1.875rem, 1.069214876rem + 3.305785124vw, 4.375rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.75rem, 1.145661157rem + 2.479338843vw, 3.625rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(1.5rem, 1.1776859504rem + 1.3223140496vw, 2.5rem);
}

h4, .h4 {
  font-size: clamp(1.125rem, 0.9638429752rem + 0.6611570248vw, 1.625rem);
}

h5, .h5 {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
}

h6, .h6 {
  font-size: clamp(1rem, 0.9194214876rem + 0.3305785124vw, 1.25rem);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-accent);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0 !important;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  height: 2.75rem;
  content: "";
}

.header {
  overflow: visible;
}
.header__banner {
  background-color: var(--color-gray-50);
  padding-block: 1.25rem;
}
.header__banner-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__banner-title {
  font-size: clamp(1rem, 0.3553719008rem + 2.6446280992vw, 3rem);
  color: var(--color-light);
}
.header__body {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-block: 2.5rem 1.25rem;
  row-gap: 0.25rem;
}
@media (width <= 47.99875rem) {
  .header__body {
    padding-block: 1rem 0.625rem;
  }
}
.header__body-image {
  width: clamp(15.625rem, 11.2939049587rem + 17.7685950413vw, 29.0625rem);
}
.header__body-title {
  font-size: clamp(1rem, 0.3553719008rem + 2.6446280992vw, 3rem);
  color: var(--color-light);
}
.header__body-description {
  font-size: clamp(0.875rem, 0.5929752066rem + 1.1570247934vw, 1.75rem);
  text-align: center;
  max-width: 62.5rem;
}
@media (width <= 63.99875rem) {
  .header__body-description {
    max-width: 37.5rem;
  }
}
.header__progress {
  display: block;
  background-color: var(--color-gray-50);
  padding-block: 0.625rem;
  position: sticky;
  z-index: 100;
  top: 0;
}
.header__progress-inner {
  display: block;
}
@media (width > 47.99875rem) {
  .header__progress-inner {
    display: flex;
    justify-content: space-around;
  }
}
.header__progress-count, .header__progress-percentage {
  font-size: clamp(1rem, 0.3553719008rem + 2.6446280992vw, 3rem);
  color: var(--color-light);
}

.card {
  --columns: 3;
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  gap: 2.5rem;
  justify-content: center;
  padding-block: 1.25rem;
}
@media (width > 125.06125rem) {
  .card {
    --columns: 4;
  }
}
@media (width <= 90.06125rem) {
  .card {
    --columns: 2;
  }
}
@media (width <= 63.99875rem) {
  .card {
    --columns: 2;
  }
}
@media (width <= 47.99875rem) {
  .card {
    --columns: 1;
  }
}
.card__wrapper {
  background-color: var(--color-dark-40);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 26.875rem;
  height: 100%;
  padding: 1.25rem;
  border-radius: 0.875rem;
}
@media (width <= 63.99875rem) {
  .card__wrapper {
    width: 18.75rem;
  }
}
.card__image {
  align-items: center;
  width: 18.75rem;
  height: 16.25rem;
}
@media (width <= 63.99875rem) {
  .card__image {
    width: 15.625rem;
    height: 12.5rem;
  }
}
.card__image-image {
  width: 18.75rem;
  height: 16.25rem;
}
@media (width <= 63.99875rem) {
  .card__image-image {
    width: 15.625rem;
    height: 12.5rem;
  }
}
.card__body {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding-block: 0.625rem;
  align-items: center;
}
.card__body-title {
  font-size: clamp(1.125rem, 0.7623966942rem + 1.4876033058vw, 2.25rem);
  color: var(--color-light);
  text-align: center;
}
.card__body-price {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
  color: lawngreen;
}
.card__purchase {
  display: flex;
  gap: 1.25rem;
  width: 100%;
  align-items: center;
  justify-content: center;
}
.card__purchase-input {
  width: 6.25rem;
}
.card__purchase-sell, .card__purchase-buy {
  border: none;
  border-radius: 0.25rem;
}
@media (width > 63.99875rem) {
  .card__purchase-sell, .card__purchase-buy {
    min-width: 6.25rem;
  }
}
.card__purchase-sell {
  background-color: var(--color-light);
  transition: all 0.3s ease;
}
.card__purchase-sell.inactive {
  opacity: 0.4;
  cursor: not-allowed;
}
.card__purchase-sell.active {
  opacity: 1;
  cursor: pointer;
}
.card__purchase-buy {
  background: linear-gradient(180deg, #2ecc71, #1abc9c);
  color: var(--color-light);
}
@media (width <= 63.99875rem) {
  .card__purchase {
    display: grid;
    grid-template-areas: "sell buy" "input input";
  }
  .card__purchase-sell {
    grid-area: sell;
    transition: all 0.3s ease;
  }
  .card__purchase-sell.inactive {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .card__purchase-sell.active {
    opacity: 1;
    cursor: pointer;
  }
  .card__purchase-buy {
    grid-area: buy;
  }
  .card__purchase-input {
    grid-area: input;
    width: 100%;
  }
}/*# sourceMappingURL=main.css.map */